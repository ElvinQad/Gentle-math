generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  password        String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  isAdmin         Boolean   @default(false)
  subscribedUntil DateTime?
  activities      UserActivity[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Trend {
  id            String   @id @default(cuid())
  title         String
  description   String
  type          String
  imageUrls     String[]
  mainImageIndex Int     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  analytics     Analytics[]

  @@index([createdAt])
}

model Analytics {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  trendId   String     @unique
  dates     DateTime[]
  values    Int[]
  trend     Trend      @relation(fields: [trendId], references: [id])

  @@index([createdAt])
}

// New model for tracking user activity
model UserActivity {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  type      String   // e.g., 'login', 'logout', 'api_call'
  timestamp DateTime @default(now())
  metadata  Json?    // Additional data like IP, user agent, etc.

  @@index([userId])
  @@index([timestamp])
}

model Setting {
  key   String @id
  value String

  @@map("settings")
}
