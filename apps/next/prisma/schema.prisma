generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String         @id @default(cuid())
  name               String?
  email              String?        @unique
  emailVerified      DateTime?
  image              String?
  password           String?
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  isAdmin            Boolean        @default(false)
  subscribedUntil    DateTime?
  sheetsAccessToken  String?
  sheetsRefreshToken String?
  sheetsTokenExpiry  DateTime?
  activities         UserActivity[]
}

model Category {
  id          String     @id @default(cuid())
  name        String
  slug        String     @unique
  description String?
  imageUrl    String?    @default("")
  parentId    String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  parent      Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryHierarchy")
  trends      Trend[]

  @@index([parentId])
}

model Trend {
  id             String     @id @default(cuid())
  title          String
  description    String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  imageUrls      String[]
  type           String
  mainImageIndex Int        @default(0)
  analytics      Analytics?
  categoryId     String?
  category       Category?  @relation(fields: [categoryId], references: [id])

  @@index([createdAt])
  @@index([categoryId])
}

model Analytics {
  id          String     @id @default(cuid())
  createdAt   DateTime   @default(now())
  trendId     String?    @unique
  colorId     String?    @unique
  dates       DateTime[]
  values      Int[]
  ageSegments Json?
  trend       Trend?     @relation(fields: [trendId], references: [id], onDelete: Cascade)
  colorTrend  ColorTrend? @relation(fields: [colorId], references: [id], onDelete: Cascade)

  @@index([createdAt])
}

model ColorTrend {
  id          String     @id @default(cuid())
  name        String
  hex         String
  imageUrl    String
  popularity  Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  analytics   Analytics?
  palette1    String?    // First palette color
  palette2    String?    // Second palette color
  palette3    String?    // Third palette color
  palette4    String?    // Fourth palette color
  palette5    String?    // Fifth palette color

  @@index([createdAt])
}

model UserActivity {
  id        String   @id @default(cuid())
  userId    String
  type      String
  timestamp DateTime @default(now())
  metadata  Json?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([timestamp])
}

model Setting {
  key   String @id
  value String

  @@map("settings")
}
